# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
# It also setups Python to run the TextTest suite
# Finally, the workflow also runs JUnit tests and uploads the build reports as artifacts

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  actions: read
  checks: write
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/help/legal-terms-of-use"
          build-scan-terms-of-use-agree: "yes"
          add-job-summary-as-pr-comment: always

      - name: Setup python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with Gradle Wrapper
        run: Java/gradlew -p Java build -x test

      - name: Run JUnit tests
        run: Java/gradlew -p Java test
        continue-on-error: true

      - name: Run TextTest suite
        run: texttest -a gr -b continuous -zen
        continue-on-error: true

      - name: Run coverage report
        run: Java/gradlew -p Java jacocoAllReports
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: '!cancelled()'
        with:
          name: build-reports
          path: |
            Java/build/reports/
            Java/build/jacoco/
            Java/build/test-results/

  call-coverage-checks:
    name: Coverage checks
    needs: build
    if: ${{ !cancelled() }}
    uses: ./.github/workflows/coverage-checks-and-reports.yml

  call-test-checks:
    name: Test checks
    needs: build
    if: ${{ !cancelled() }}
    uses: ./.github/workflows/test-checks-and-reports.yml

  upload-event-file:
    name: Upload Event File
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: Event File
          path: ${{ github.event_path }}
